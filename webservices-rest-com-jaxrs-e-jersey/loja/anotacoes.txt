Aula01- Serviços Web REST e Addressability


VIDEO 01-Serviços Web REST e Addressability

	web services rest
	cada carrinho representa uma  uri diferente
	html enviado do servidor para o cliente
	servidores disponibilzam um outro formato mais facil da maquina entender
		formato XML
			enviado de um lado para o outro
		temos diversas media types que podemos trabalhar
		
	baixar os jars-rs e jersey
	para testar se acessar URI é criar um programa cliente
		programa que se comunica com outro
		@Test
			é um teste
			Client
				ClientBuilder
					cria um cliente
				target
					path
						para onde queremos fazer o request
						request.get(String.class)
							devolve uma string
							


Criando servidor

	DAO
		acessa o banco de dados
	recurso
		busca no banco de dados
		traz as coisas para mim
			mostra para o cliente o XML
		todo recurso tem a anotação
			@Path
	no servidor podemos devolver o XML
		@Produces
			servidor não tem como adivinhar
			MediaType.APPLICATION_XML
				está produzindo o XML
		@GET
		
Levantando servidor

	HttpServer
		servidor do Grizzly
		uri base
			localhost
			temos que criar o localhost
		configuração dos recursos
			ResouceConfig
				packages
					passamos o pacote
					vai usar tudo do JAX-RS para o servidor
	


---
Aula02- Testes end-to-end com JAX-RS e Grizzly



VIDEO 01-Testes end-to-end com JAX-RS e Grizzly

	desserealizar
		Transformar o XML em objeto

	consigo criar testes clientes
	para não ficar com retrabalho de levantar o servidor e matar o servidor
		joga o codigo que levanta o servidor na classe de teste

	@Before
		antes de rodar cada um dos meus testes eu vou rodar o código
	
	@After
		matar o servidor depois de rodar os meus testes



---
Aula03- Trabalhando com parâmetros


VIDEO 01-Trabalhando com parâmetros

	de alguma maneira falar qual é o carrinho que eu quero
		QueryParam("id")
			veio na minha query do GET
		quando usamos um parametro na uri
			/id
			usamos a anotação @Path("{id}")
			no metodo utilizamos o @PathParam("id")




---
Aula04- Gerando Json com Gson


VIDEO 01-Gerando Json com Gson
	trabalhar com Gson
	é muito simples usar Gson ou XML

---
Aula05- Criando recursos e o POST

VIDEO 01-Criando recursos e o POST
	Criar um recurso no meu servidor
	POST
		cria um recurso no meu servidor
		envia uma representação do cliente para o servidor
		
---
Aula06- O protocolo HTTP por baixo dos panos
	 cliente se comunica com o servidor
	 	via protocolo HTTP
	 -v
	 	verbose
	 		mostra o que você esta enviando para o servidor
	 		trocando representações atraves de cabeçalhos
	 	
---
Aula07- Status code e a Interface Uniforme
	 	200
	 		ok
	 	500
	 		erro interno no servidor
	 		dentro do código deu exception
	 	
	 	201
	 		recurso foi criado com sucesso
	 	
	 	http já devolve as respostas de status code
	 	retornar um Response
	 		quando colocamos .build()
	 			ele transforma numa Response
	 	415
	 		O media type está errado
	 		o servidor não entendi o status code
	 	
	 			
	 	todo mundo entende status code
	 		Essa é a vantagem
	 		na internet todo mundo entende
	 	
	 	@Consumes
	 		estou consumindo application xml
	 		
	 	@Produces
	 		eu cuspo application xml
	 	
---
Aula08- Idempotência

	
	Requisição GET
		idempotência
			podemos fazer ela varias vezes
			que não vai fazer nada no servidor
			não alteramos o estado da aplicação
			podemos fazer a req quantas vezes quisermos, que não terá problema

---
Aula09-Removendo recursos e subrecursos


	quero remover um produto daquele carrinho
	subrecurso
		um recurso dentro do outro
--
aula11-Atualizando recursos e o PUT
	Alterar Quantidade
	
--
aula12-Interface Uniforme
	existem outros metdos http
		patch
			um pedaço do recurso
		options
			verbos e metodos
		head
			traz só o cabeçalgo de um get
		trace,connect
			são usados em outros tipos de aplicações
		status code
			retorna o resultado da ação
		todo mundo no meio do caminho sabe suas ações
			toda as APIS sabem o que uma requisição está fazendo
		
	

